// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

#![allow(dead_code)]

use wasmlib::*;

use crate::*;

pub(crate) const IDX_PARAM_CHARGE_WEIGHT : usize = 0;
pub(crate) const IDX_PARAM_COMP          : usize = 1;
pub(crate) const IDX_PARAM_FRAC_ID       : usize = 2;
pub(crate) const IDX_PARAM_ID            : usize = 3;
pub(crate) const IDX_PARAM_MAT           : usize = 4;
pub(crate) const IDX_PARAM_NAME          : usize = 5;
pub(crate) const IDX_PARAM_OWNER         : usize = 6;
pub(crate) const IDX_PARAM_PP_ID         : usize = 7;
pub(crate) const IDX_PARAM_PROD_PASS     : usize = 8;
pub(crate) const IDX_PARAM_PROP          : usize = 9;

pub(crate) const IDX_RESULT_COMPOSITIONS      : usize = 10;
pub(crate) const IDX_RESULT_FRAC_ID           : usize = 11;
pub(crate) const IDX_RESULT_FRACTION          : usize = 12;
pub(crate) const IDX_RESULT_ID                : usize = 13;
pub(crate) const IDX_RESULT_OWNER             : usize = 14;
pub(crate) const IDX_RESULT_PP                : usize = 15;
pub(crate) const IDX_RESULT_PPNAME            : usize = 16;
pub(crate) const IDX_RESULT_PPRESULT          : usize = 17;
pub(crate) const IDX_RESULT_RECYCLATE_ID      : usize = 18;
pub(crate) const IDX_RESULT_TOKEN_PER_PACKAGE : usize = 19;
pub(crate) const IDX_RESULT_TOKEN_REQUIRED    : usize = 20;

pub(crate) const IDX_STATE_COMPOSITIONS      : usize = 21;
pub(crate) const IDX_STATE_FRAC_COMPOSITIONS : usize = 22;
pub(crate) const IDX_STATE_FRACTIONS         : usize = 23;
pub(crate) const IDX_STATE_LAST_PAYOUT       : usize = 24;
pub(crate) const IDX_STATE_OWNER             : usize = 25;
pub(crate) const IDX_STATE_PAYOFF_KEYS_FRAC  : usize = 26;
pub(crate) const IDX_STATE_PAYOFFS_FRAC      : usize = 27;
pub(crate) const IDX_STATE_PRICE_PER_MG      : usize = 28;
pub(crate) const IDX_STATE_PRODUCTPASSES     : usize = 29;
pub(crate) const IDX_STATE_RECY_COMPOSITIONS : usize = 30;
pub(crate) const IDX_STATE_RECYCLATES        : usize = 31;
pub(crate) const IDX_STATE_SHARE_RECYCLER    : usize = 32;

pub const KEY_MAP_LEN: usize = 33;

pub const KEY_MAP: [&str; KEY_MAP_LEN] = [
	PARAM_CHARGE_WEIGHT,
	PARAM_COMP,
	PARAM_FRAC_ID,
	PARAM_ID,
	PARAM_MAT,
	PARAM_NAME,
	PARAM_OWNER,
	PARAM_PP_ID,
	PARAM_PROD_PASS,
	PARAM_PROP,
	RESULT_COMPOSITIONS,
	RESULT_FRAC_ID,
	RESULT_FRACTION,
	RESULT_ID,
	RESULT_OWNER,
	RESULT_PP,
	RESULT_PPNAME,
	RESULT_PPRESULT,
	RESULT_RECYCLATE_ID,
	RESULT_TOKEN_PER_PACKAGE,
	RESULT_TOKEN_REQUIRED,
	STATE_COMPOSITIONS,
	STATE_FRAC_COMPOSITIONS,
	STATE_FRACTIONS,
	STATE_LAST_PAYOUT,
	STATE_OWNER,
	STATE_PAYOFF_KEYS_FRAC,
	STATE_PAYOFFS_FRAC,
	STATE_PRICE_PER_MG,
	STATE_PRODUCTPASSES,
	STATE_RECY_COMPOSITIONS,
	STATE_RECYCLATES,
	STATE_SHARE_RECYCLER,
];

pub static mut IDX_MAP: [Key32; KEY_MAP_LEN] = [Key32(0); KEY_MAP_LEN];

pub fn idx_map(idx: usize) -> Key32 {
    unsafe {
        IDX_MAP[idx]
    }
}
