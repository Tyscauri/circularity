{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":582,"byte_end":585,"line_start":20,"line_end":20,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"pub fn func_set_owner(ctx: &ScFuncContext, f: &SetOwnerContext) {","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":582,"byte_end":585,"line_start":20,"line_end":20,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"pub fn func_set_owner(ctx: &ScFuncContext, f: &SetOwnerContext) {","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:20:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn func_set_owner(ctx: &ScFuncContext, f: &SetOwnerContext) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":709,"byte_end":712,"line_start":24,"line_end":24,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"pub fn view_get_owner(ctx: &ScViewContext, f: &GetOwnerContext) {","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":709,"byte_end":712,"line_start":24,"line_end":24,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"pub fn view_get_owner(ctx: &ScViewContext, f: &GetOwnerContext) {","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:24:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_owner(ctx: &ScViewContext, f: &GetOwnerContext) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":3076,"byte_end":3079,"line_start":89,"line_end":89,"column_start":42,"column_end":45,"is_primary":true,"text":[{"text":"pub fn view_get_amount_of_required_funds(ctx: &ScViewContext, f: &GetAmountOfRequiredFundsContext) {","highlight_start":42,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":3076,"byte_end":3079,"line_start":89,"line_end":89,"column_start":42,"column_end":45,"is_primary":true,"text":[{"text":"pub fn view_get_amount_of_required_funds(ctx: &ScViewContext, f: &GetAmountOfRequiredFundsContext) {","highlight_start":42,"highlight_end":45}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:89:42\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_amount_of_required_funds(ctx: &ScViewContext, f: &GetAmountOfRequiredFundsContext) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":3326,"byte_end":3329,"line_start":94,"line_end":94,"column_start":35,"column_end":38,"is_primary":true,"text":[{"text":"pub fn view_get_token_per_package(ctx: &ScViewContext, f: &GetTokenPerPackageContext) {","highlight_start":35,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":3326,"byte_end":3329,"line_start":94,"line_end":94,"column_start":35,"column_end":38,"is_primary":true,"text":[{"text":"pub fn view_get_token_per_package(ctx: &ScViewContext, f: &GetTokenPerPackageContext) {","highlight_start":35,"highlight_end":38}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:94:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_token_per_package(ctx: &ScViewContext, f: &GetTokenPerPackageContext) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":4227,"byte_end":4230,"line_start":122,"line_end":122,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"pub fn view_get_materials(ctx: &ScViewContext, f: &GetMaterialsContext) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":4227,"byte_end":4230,"line_start":122,"line_end":122,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"pub fn view_get_materials(ctx: &ScViewContext, f: &GetMaterialsContext) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:122:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn view_get_materials(ctx: &ScViewContext, f: &GetMaterialsContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":4648,"byte_end":4651,"line_start":135,"line_end":135,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"pub fn func_set_materials(ctx: &ScFuncContext, f: &SetMaterialsContext) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":4648,"byte_end":4651,"line_start":135,"line_end":135,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"pub fn func_set_materials(ctx: &ScFuncContext, f: &SetMaterialsContext) {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:135:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn func_set_materials(ctx: &ScFuncContext, f: &SetMaterialsContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"unused variable: `ctx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":6224,"byte_end":6227,"line_start":180,"line_end":180,"column_start":32,"column_end":35,"is_primary":true,"text":[{"text":"pub fn func_add_pp_to_fraction(ctx: &ScFuncContext, f: &AddPPToFractionContext) {","highlight_start":32,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":6224,"byte_end":6227,"line_start":180,"line_end":180,"column_start":32,"column_end":35,"is_primary":true,"text":[{"text":"pub fn func_add_pp_to_fraction(ctx: &ScFuncContext, f: &AddPPToFractionContext) {","highlight_start":32,"highlight_end":35}],"label":null,"suggested_replacement":"_ctx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ctx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:180:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn func_add_pp_to_fraction(ctx: &ScFuncContext, f: &AddPPToFractionContext) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ctx`\u001b[0m\n\n"}
{"message":"variable `decFood` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":1522,"byte_end":1529,"line_start":44,"line_end":44,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let decFood: bool = true;          //TEST IMPLEMENTATION - ADD as Parameter in create func","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":1522,"byte_end":1529,"line_start":44,"line_end":44,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let decFood: bool = true;          //TEST IMPLEMENTATION - ADD as Parameter in create func","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"dec_food","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `decFood` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:44:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let decFood: bool = true;          //TEST IMPLEMENTATION - ADD as Parameter in create func\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `dec_food`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `decHygiene` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":1617,"byte_end":1627,"line_start":45,"line_end":45,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let decHygiene: bool = true;       //TEST IMPLEMENTATION - ADD as Parameter in create func","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":1617,"byte_end":1627,"line_start":45,"line_end":45,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let decHygiene: bool = true;       //TEST IMPLEMENTATION - ADD as Parameter in create func","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"dec_hygiene","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `decHygiene` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:45:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let decHygiene: bool = true;       //TEST IMPLEMENTATION - ADD as Parameter in create func\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `dec_hygiene`\u001b[0m\n\n"}
{"message":"variable `chargeWeight` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":1712,"byte_end":1724,"line_start":46,"line_end":46,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let chargeWeight: u64 = 1000000000; // in miligramm","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":1712,"byte_end":1724,"line_start":46,"line_end":46,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let chargeWeight: u64 = 1000000000; // in miligramm","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"charge_weight","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `chargeWeight` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:46:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let chargeWeight: u64 = 1000000000; // in miligramm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `charge_weight`\u001b[0m\n\n"}
{"message":"variable `packageWeight` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":1768,"byte_end":1781,"line_start":47,"line_end":47,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let packageWeight: u64 = 2000;  // in miligramm","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":1768,"byte_end":1781,"line_start":47,"line_end":47,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let packageWeight: u64 = 2000;  // in miligramm","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"package_weight","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `packageWeight` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:47:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let packageWeight: u64 = 2000;  // in miligramm\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `package_weight`\u001b[0m\n\n"}
{"message":"variable `ppNew` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":1825,"byte_end":1830,"line_start":49,"line_end":49,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let ppNew = ProductPass{","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":1825,"byte_end":1830,"line_start":49,"line_end":49,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let ppNew = ProductPass{","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"pp_new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppNew` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:49:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ppNew = ProductPass{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_new`\u001b[0m\n\n"}
{"message":"variable `requiredToken` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":2160,"byte_end":2173,"line_start":62,"line_end":62,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let requiredToken = (&ppNew.charge_weight * f.state.price_per_mg().value()) as i64;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":2160,"byte_end":2173,"line_start":62,"line_end":62,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let requiredToken = (&ppNew.charge_weight * f.state.price_per_mg().value()) as i64;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"required_token","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `requiredToken` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:62:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let requiredToken = (&ppNew.charge_weight * f.state.price_per_mg().value()) as i64;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `required_token`\u001b[0m\n\n"}
{"message":"variable `requiredFunds` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":3144,"byte_end":3157,"line_start":90,"line_end":90,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let requiredFunds: u64 = f.params.charge_weight().value() * f.state.price_per_mg().value();","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":3144,"byte_end":3157,"line_start":90,"line_end":90,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let requiredFunds: u64 = f.params.charge_weight().value() * f.state.price_per_mg().value();","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"required_funds","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `requiredFunds` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:90:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let requiredFunds: u64 = f.params.charge_weight().value() * f.state.price_per_mg().value();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `required_funds`\u001b[0m\n\n"}
{"message":"variable `pricePerMg` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":3433,"byte_end":3443,"line_start":96,"line_end":96,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let pricePerMg = f.state.price_per_mg().value();","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":3433,"byte_end":3443,"line_start":96,"line_end":96,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let pricePerMg = f.state.price_per_mg().value();","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"price_per_mg","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `pricePerMg` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:96:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let pricePerMg = f.state.price_per_mg().value();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `price_per_mg`\u001b[0m\n\n"}
{"message":"variable `tokenPerPackage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":3486,"byte_end":3501,"line_start":97,"line_end":97,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    let tokenPerPackage: u64 =  pass.package_weight * pricePerMg;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":3486,"byte_end":3501,"line_start":97,"line_end":97,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    let tokenPerPackage: u64 =  pass.package_weight * pricePerMg;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"token_per_package","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tokenPerPackage` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:97:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let tokenPerPackage: u64 =  pass.package_weight * pricePerMg;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `token_per_package`\u001b[0m\n\n"}
{"message":"variable `newComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":3889,"byte_end":3896,"line_start":109,"line_end":109,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newComp = Composition{","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":3889,"byte_end":3896,"line_start":109,"line_end":109,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newComp = Composition{","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"new_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:109:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newComp = Composition{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_comp`\u001b[0m\n\n"}
{"message":"variable `newComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":4745,"byte_end":4752,"line_start":138,"line_end":138,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newComp = f.params.comp();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":4745,"byte_end":4752,"line_start":138,"line_end":138,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newComp = f.params.comp();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"new_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:138:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newComp = f.params.comp();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_comp`\u001b[0m\n\n"}
{"message":"variable `fracID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":5105,"byte_end":5111,"line_start":152,"line_end":152,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = create_random_hash(ctx);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":5105,"byte_end":5111,"line_start":152,"line_end":152,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = create_random_hash(ctx);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"frac_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:152:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracID = create_random_hash(ctx);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_id`\u001b[0m\n\n"}
{"message":"variable `decFood` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":5276,"byte_end":5283,"line_start":155,"line_end":155,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let decFood = true;                  //When any product is included without food declaration, the fraction will loose its food suitability ","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":5276,"byte_end":5283,"line_start":155,"line_end":155,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let decFood = true;                  //When any product is included without food declaration, the fraction will loose its food suitability ","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"dec_food","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `decFood` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:155:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let decFood = true;                  //When any product is included without food declaration, the fraction will loose its food suitab\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `dec_food`\u001b[0m\n\n"}
{"message":"variable `decHygiene` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":5420,"byte_end":5430,"line_start":156,"line_end":156,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let decHygiene = true;               //When any product is included without hygiene declaration, the fraction will loose its hygiene suitability ","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":5420,"byte_end":5430,"line_start":156,"line_end":156,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let decHygiene = true;               //When any product is included without hygiene declaration, the fraction will loose its hygiene suitability ","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"dec_hygiene","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `decHygiene` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:156:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let decHygiene = true;               //When any product is included without hygiene declaration, the fraction will loose its hygiene \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `dec_hygiene`\u001b[0m\n\n"}
{"message":"variable `newFrac` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":5621,"byte_end":5628,"line_start":159,"line_end":159,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newFrac = Fraction {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":5621,"byte_end":5628,"line_start":159,"line_end":159,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newFrac = Fraction {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"new_frac","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newFrac` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:159:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newFrac = Fraction {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_frac`\u001b[0m\n\n"}
{"message":"variable `newFracComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":5908,"byte_end":5919,"line_start":171,"line_end":171,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let newFracComp = FracComposition {","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":5908,"byte_end":5919,"line_start":171,"line_end":171,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let newFracComp = FracComposition {","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"new_frac_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newFracComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:171:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newFracComp = FracComposition {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_frac_comp`\u001b[0m\n\n"}
{"message":"variable `ppID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":6288,"byte_end":6292,"line_start":182,"line_end":182,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let ppID = f.params.pp_id().value();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":6288,"byte_end":6292,"line_start":182,"line_end":182,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let ppID = f.params.pp_id().value();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"pp_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:182:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ppID = f.params.pp_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_id`\u001b[0m\n\n"}
{"message":"variable `fracID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":6329,"byte_end":6335,"line_start":183,"line_end":183,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = f.params.frac_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":6329,"byte_end":6335,"line_start":183,"line_end":183,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = f.params.frac_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"frac_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:183:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracID = f.params.frac_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_id`\u001b[0m\n\n"}
{"message":"variable `ppComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":6457,"byte_end":6463,"line_start":185,"line_end":185,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let ppComp = f.state.compositions().get_compositions(&ppID);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":6457,"byte_end":6463,"line_start":185,"line_end":185,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let ppComp = f.state.compositions().get_compositions(&ppID);","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"pp_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ppComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:185:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ppComp = f.state.compositions().get_compositions(&ppID);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pp_comp`\u001b[0m\n\n"}
{"message":"variable `fracComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":6522,"byte_end":6530,"line_start":186,"line_end":186,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let fracComp = f.state.frac_compositions().get_frac_compositions(&fracID);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":6522,"byte_end":6530,"line_start":186,"line_end":186,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let fracComp = f.state.frac_compositions().get_frac_compositions(&fracID);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"frac_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:186:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracComp = f.state.frac_compositions().get_frac_compositions(&fracID);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_comp`\u001b[0m\n\n"}
{"message":"variable `foundMat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":6653,"byte_end":6661,"line_start":190,"line_end":190,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        let mut foundMat: bool = false;","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":6653,"byte_end":6661,"line_start":190,"line_end":190,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        let mut foundMat: bool = false;","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":"found_mat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `foundMat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:190:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut foundMat: bool = false;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `found_mat`\u001b[0m\n\n"}
{"message":"variable `newWeight` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":6859,"byte_end":6868,"line_start":194,"line_end":194,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"                let newWeight = fracComp.get_frac_composition(j).value().weight + ppComp.get_composition(i).value().proportion as u64 * pp.package_weight /1000;   // div by 1000 because proportion is in per mil","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":6859,"byte_end":6868,"line_start":194,"line_end":194,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"                let newWeight = fracComp.get_frac_composition(j).value().weight + ppComp.get_composition(i).value().proportion as u64 * pp.package_weight /1000;   // div by 1000 because proportion is in per mil","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":"new_weight","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newWeight` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:194:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0m   let newWeight = fracComp.get_frac_composition(j).value().weight + ppComp.get_composition(i).value().proportion as u64 * pp.package_\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_weight`\u001b[0m\n\n"}
{"message":"variable `newShare` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":7087,"byte_end":7095,"line_start":196,"line_end":196,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"                let newShare = FracComposition {","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":7087,"byte_end":7095,"line_start":196,"line_end":196,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"                let newShare = FracComposition {","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":"new_share","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newShare` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:196:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let newShare = FracComposition {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_share`\u001b[0m\n\n"}
{"message":"variable `newMat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":7646,"byte_end":7652,"line_start":209,"line_end":209,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let newMat = FracComposition{","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":7646,"byte_end":7652,"line_start":209,"line_end":209,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let newMat = FracComposition{","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"new_mat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newMat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:209:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let newMat = FracComposition{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_mat`\u001b[0m\n\n"}
{"message":"variable `fracID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":8226,"byte_end":8232,"line_start":229,"line_end":229,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = f.params.frac_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":8226,"byte_end":8232,"line_start":229,"line_end":229,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let fracID = f.params.frac_id().value();","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"frac_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:229:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracID = f.params.frac_id().value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_id`\u001b[0m\n\n"}
{"message":"variable `recyclateID` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":8352,"byte_end":8363,"line_start":232,"line_end":232,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let recyclateID = create_random_hash(ctx);    ","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":8352,"byte_end":8363,"line_start":232,"line_end":232,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let recyclateID = create_random_hash(ctx);    ","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"recyclate_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `recyclateID` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:232:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let recyclateID = create_random_hash(ctx);    \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `recyclate_id`\u001b[0m\n\n"}
{"message":"variable `decFood` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":8537,"byte_end":8544,"line_start":235,"line_end":235,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let decFood = fraction.dec_food;                  //When any product is included without food declaration, the fraction will loose its food suitability ","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":8537,"byte_end":8544,"line_start":235,"line_end":235,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let decFood = fraction.dec_food;                  //When any product is included without food declaration, the fraction will loose its food suitability ","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"dec_food","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `decFood` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:235:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let decFood = fraction.dec_food;                  //When any product is included without food declaration, the fraction will loose it\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `dec_food`\u001b[0m\n\n"}
{"message":"variable `decHygiene` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":8694,"byte_end":8704,"line_start":236,"line_end":236,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let decHygiene = fraction.dec_hygiene;               //When any product is included without hygiene declaration, the fraction will loose its hygiene suitability ","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":8694,"byte_end":8704,"line_start":236,"line_end":236,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let decHygiene = fraction.dec_hygiene;               //When any product is included without hygiene declaration, the fraction will loose its hygiene suitability ","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"dec_hygiene","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `decHygiene` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:236:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let decHygiene = fraction.dec_hygiene;               //When any product is included without hygiene declaration, the fraction will lo\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `dec_hygiene`\u001b[0m\n\n"}
{"message":"variable `newRecy` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":8950,"byte_end":8957,"line_start":240,"line_end":240,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newRecy = Recyclate {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":8950,"byte_end":8957,"line_start":240,"line_end":240,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let newRecy = Recyclate {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"new_recy","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newRecy` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:240:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newRecy = Recyclate {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_recy`\u001b[0m\n\n"}
{"message":"variable `newRecyCompProxy` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":9250,"byte_end":9266,"line_start":252,"line_end":252,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let newRecyCompProxy = f.state.recy_compositions().get_recy_compositions(&newRecy.recy_id);","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":9250,"byte_end":9266,"line_start":252,"line_end":252,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let newRecyCompProxy = f.state.recy_compositions().get_recy_compositions(&newRecy.recy_id);","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"new_recy_comp_proxy","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newRecyCompProxy` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:252:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let newRecyCompProxy = f.state.recy_compositions().get_recy_compositions(&newRecy.recy_id);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_recy_comp_proxy`\u001b[0m\n\n"}
{"message":"variable `fracComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":9346,"byte_end":9354,"line_start":253,"line_end":253,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let fracComp: ArrayOfMutableFracComposition = f.state.frac_compositions().get_frac_compositions(&fracID);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":9346,"byte_end":9354,"line_start":253,"line_end":253,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let fracComp: ArrayOfMutableFracComposition = f.state.frac_compositions().get_frac_compositions(&fracID);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"frac_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fracComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:253:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let fracComp: ArrayOfMutableFracComposition = f.state.frac_compositions().get_frac_compositions(&fracID);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `frac_comp`\u001b[0m\n\n"}
{"message":"variable `fComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":9510,"byte_end":9515,"line_start":257,"line_end":257,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let fComp = fracComp.get_frac_composition(i).value();","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":9510,"byte_end":9515,"line_start":257,"line_end":257,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let fComp = fracComp.get_frac_composition(i).value();","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":"f_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:257:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let fComp = fracComp.get_frac_composition(i).value();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `f_comp`\u001b[0m\n\n"}
{"message":"variable `recyComp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/test3.rs","byte_start":9647,"byte_end":9655,"line_start":261,"line_end":261,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let recyComp = RecyComposition{","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/test3.rs","byte_start":9647,"byte_end":9655,"line_start":261,"line_end":261,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let recyComp = RecyComposition{","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"recy_comp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `recyComp` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test3.rs:261:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let recyComp = RecyComposition{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `recy_comp`\u001b[0m\n\n"}
{"message":"40 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 40 warnings emitted\u001b[0m\n\n"}
