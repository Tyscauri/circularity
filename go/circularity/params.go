// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package circularity

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableAddMaterialParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableAddMaterialParams) Id() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.proxy.Root(ParamId))
}

func (s ImmutableAddMaterialParams) Mat() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ParamMat))
}

func (s ImmutableAddMaterialParams) Prop() wasmtypes.ScImmutableUint8 {
	return wasmtypes.NewScImmutableUint8(s.proxy.Root(ParamProp))
}

type MutableAddMaterialParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableAddMaterialParams) Id() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.proxy.Root(ParamId))
}

func (s MutableAddMaterialParams) Mat() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ParamMat))
}

func (s MutableAddMaterialParams) Prop() wasmtypes.ScMutableUint8 {
	return wasmtypes.NewScMutableUint8(s.proxy.Root(ParamProp))
}

type ImmutableAddPPToFractionParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableAddPPToFractionParams) FracID() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.proxy.Root(ParamFracID))
}

func (s ImmutableAddPPToFractionParams) PpID() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.proxy.Root(ParamPpID))
}

type MutableAddPPToFractionParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableAddPPToFractionParams) FracID() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.proxy.Root(ParamFracID))
}

func (s MutableAddPPToFractionParams) PpID() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.proxy.Root(ParamPpID))
}

type ImmutableCreateFractionParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableCreateFractionParams) Name() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ParamName))
}

type MutableCreateFractionParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableCreateFractionParams) Name() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ParamName))
}

type ImmutableCreatePPParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableCreatePPParams) Name() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ParamName))
}

type MutableCreatePPParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableCreatePPParams) Name() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ParamName))
}

type ImmutableCreateRecyclateParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableCreateRecyclateParams) FracID() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.proxy.Root(ParamFracID))
}

func (s ImmutableCreateRecyclateParams) Name() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ParamName))
}

type MutableCreateRecyclateParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableCreateRecyclateParams) FracID() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.proxy.Root(ParamFracID))
}

func (s MutableCreateRecyclateParams) Name() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ParamName))
}

type ImmutableInitParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableInitParams) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ParamOwner))
}

type MutableInitParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableInitParams) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ParamOwner))
}

type ImmutablePayoutFracParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutablePayoutFracParams) FracID() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.proxy.Root(ParamFracID))
}

type MutablePayoutFracParams struct {
	proxy wasmtypes.Proxy
}

func (s MutablePayoutFracParams) FracID() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.proxy.Root(ParamFracID))
}

type ImmutableSetMaterialsParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableSetMaterialsParams) Comp() ImmutableCompositions {
	return ImmutableCompositions{proxy: s.proxy.Root(ParamComp)}
}

func (s ImmutableSetMaterialsParams) Id() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.proxy.Root(ParamId))
}

type MutableSetMaterialsParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableSetMaterialsParams) Comp() MutableCompositions {
	return MutableCompositions{proxy: s.proxy.Root(ParamComp)}
}

func (s MutableSetMaterialsParams) Id() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.proxy.Root(ParamId))
}

type ImmutableSetOwnerParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableSetOwnerParams) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ParamOwner))
}

type MutableSetOwnerParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableSetOwnerParams) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ParamOwner))
}

type ImmutableGetAmountOfRequiredFundsParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetAmountOfRequiredFundsParams) ChargeWeight() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ParamChargeWeight))
}

type MutableGetAmountOfRequiredFundsParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetAmountOfRequiredFundsParams) ChargeWeight() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ParamChargeWeight))
}

type ImmutableGetMaterialsParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetMaterialsParams) Id() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.proxy.Root(ParamId))
}

type MutableGetMaterialsParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetMaterialsParams) Id() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.proxy.Root(ParamId))
}

type ImmutableGetPPParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetPPParams) Id() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.proxy.Root(ParamId))
}

type MutableGetPPParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetPPParams) Id() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.proxy.Root(ParamId))
}

type ImmutableGetTokenPerPackageParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetTokenPerPackageParams) ProdPass() ImmutableProductPass {
	return ImmutableProductPass{proxy: s.proxy.Root(ParamProdPass)}
}

type MutableGetTokenPerPackageParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetTokenPerPackageParams) ProdPass() MutableProductPass {
	return MutableProductPass{proxy: s.proxy.Root(ParamProdPass)}
}
